apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.consumerApi.name }}
  labels:
    {{- include "backbone.labels" . | nindent 4 }}
    app: {{ .Values.consumerApi.name }}
spec:
  replicas: {{ .Values.consumerApi.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.consumerApi.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backbone.labels" . | nindent 8 }}
        app: {{ .Values.consumerApi.name }}
    spec:
      serviceAccountName: {{ include "backbone.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.consumerApi.podSecurityContext | nindent 8 }}
      {{- with .Values.consumerApi.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.consumerApi.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: settings-override
          configMap:
            name: configuration
      containers:
        - name: {{ .Values.consumerApi.name }}
          securityContext:
            {{- toYaml .Values.consumerApi.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.consumerApi.resources | nindent 12 }}
          image: "{{ .Values.consumerApi.image.repository }}:{{ .Values.consumerApi.image.tag }}"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: settings-override
              mountPath: /app/appsettings.override.json
              subPath: appsettings.override.json
              readOnly: true
          env:
            - name: Authentication__JwtSigningCertificate
              valueFrom:
                secretKeyRef:
                  name: jwt-signing-certificate
                  key: VALUE
            - name: Infrastructure__EventBus__RabbitMQPassword
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-password
                  key: VALUE
            - name: Modules__Challenges__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: challenges-sql-connectionstring
                  key: VALUE
            - name: Modules__Devices__Infrastructure__AzureNotificationHub__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: devices-notificationhub-connectionstring
                  key: VALUE
            - name: Modules__Devices__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: devices-sql-connectionstring
                  key: VALUE
            - name: Modules__Files__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: files-sql-connectionstring
                  key: VALUE
            - name: Modules__Messages__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: messages-sql-connectionstring
                  key: VALUE
            - name: Modules__Relationships__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: relationships-sql-connectionstring
                  key: VALUE
            - name: Modules__Synchronization__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: synchronization-sql-connectionstring
                  key: VALUE
            - name: Modules__Tokens__Infrastructure__SqlDatabase__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: tokens-sql-connectionstring
                  key: VALUE
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.environment }}
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 5
      {{- with .Values.consumerApi.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.consumerApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.consumerApi.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
