{
  "Authentication": {
    "ApiKey":  "test"
  },
  "Cors": {
    "AllowedOrigins": "http://localhost:44480;https://localhost:44480",
    "ExposedHeaders": ""
  },
  "SwaggerUi": {
    "TokenUrl": "http://localhost:5010/connect/token"
  },
  "Infrastructure": {
    "EventBus": {
      "Vendor": "RabbitMQ", // possible values: InMemory, RabbitMQ, GoogleCloud, Azure
      "ConnectionInfo": "localhost",
      "SubscriptionClientName": "Backbone",

      "RabbitMQUsername": "guest", // only available for RabbitMQ
      "RabbitMQPassword": "guest", // only available for RabbitMQ
      "ConnectionRetryCount": 5, // only available for RabbitMQ

      "GcpPubSubProjectId": "", // only available for Google Cloud Pub/Sub
      "GcpPubSubTopicName": "" // only available for Google Cloud Pub/Sub
    }
  },
  "Modules": {
    "Devices": {
      "Application": {
        "AddressPrefix": "id1",
        "Pagination": {
          "DefaultPageSize": 50,
          "MaxPageSize": 200
        }
      },
      "Infrastructure": {
        "SqlDatabase": {
          "Provider": "SqlServer",
          //"ConnectionString": "User ID=devices;Password=Passw0rd;Server=localhost;Port=5432;Database=enmeshed;" // postgres
          "ConnectionString": "Server=localhost;Database=enmeshed;User Id=devices;Password=Passw0rd;TrustServerCertificate=True"
        },
        "PushNotifications": {
          "Provider": "Dummy"
        }
      }
    },
    "Quotas": {
      "Application": {
        "Pagination": {
          "DefaultPageSize": 50,
          "MaxPageSize": 200
        }
      },
      "Infrastructure": {
        "SqlDatabase": {
          "Provider": "SqlServer",
          //"ConnectionString": "User ID=quotas;Password=Passw0rd;Server=localhost;Port=5432;Database=enmeshed;" // postgres
          "ConnectionString": "Server=localhost;Database=enmeshed;User Id=quotas;Password=Passw0rd;TrustServerCertificate=True"
        }
      }
    }
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug"
    },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId",
      "WithEnvironmentName"
    ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss}|{Level} => CorrelationID:{CorrelationID} => RequestId:{RequestId} => RequestPath:{RequestPath}{NewLine}    {SourceContext}{NewLine}    {Message}{NewLine}{Exception}"
        }
      }
    ]
  }
}
