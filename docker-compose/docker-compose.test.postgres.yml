version: "3.3"
services:
  test-consumer-api:
    container_name: consumer-api
    hostname: consumer-api
    build:
      context: ..
      dockerfile: ConsumerApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://0.0.0.0:80

      - Modules__Files__Infrastructure__BlobStorage__CloudProvider=Azure
      - Modules__Files__Infrastructure__BlobStorage__ConnectionInfo=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - Modules__Files__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=files;Password=Passw0rd;Port=5432
      - Modules__Files__Infrastructure__SqlDatabase__Provider=Postgres

      - Modules__Messages__Infrastructure__BlobStorage__CloudProvider=Azure
      - Modules__Messages__Infrastructure__BlobStorage__ConnectionInfo=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - Modules__Messages__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=messages;Password=Passw0rd;Port=5432
      - Modules__Messages__Infrastructure__SqlDatabase__Provider=Postgres

      - Modules__Relationships__Infrastructure__BlobStorage__CloudProvider=Azure
      - Modules__Relationships__Infrastructure__BlobStorage__ConnectionInfo=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - Modules__Relationships__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=relationships;Password=Passw0rd;Port=5432
      - Modules__Relationships__Infrastructure__SqlDatabase__Provider=Postgres

      - Modules__Synchronization__Infrastructure__BlobStorage__CloudProvider=Azure
      - Modules__Synchronization__Infrastructure__BlobStorage__ConnectionInfo=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - Modules__Synchronization__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=synchronization;Password=Passw0rd;Port=5432
      - Modules__Synchronization__Infrastructure__SqlDatabase__Provider=Postgres

      - Modules__Tokens__Infrastructure__BlobStorage__CloudProvider=Azure
      - Modules__Tokens__Infrastructure__BlobStorage__ConnectionInfo=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
      - Modules__Tokens__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=tokens;Password=Passw0rd;Port=5432
      - Modules__Tokens__Infrastructure__SqlDatabase__Provider=Postgres

      - Modules__Devices__Infrastructure__SqlDatabase__Provider=Postgres
      - Modules__Devices__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=devices;Password=Passw0rd;Port=5432

      - Modules__Challenges__Infrastructure__SqlDatabase__Provider=Postgres
      - Modules__Challenges__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=challenges;Password=Passw0rd;Port=5432

      - Modules__Quotas__Infrastructure__SqlDatabase__Provider=Postgres
      - Modules__Quotas__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=quotas;Password=Passw0rd;Port=5432

    ports:
      - "5000:80"
    depends_on:
      test-seed-postgresql:
        condition: service_completed_successfully
      test-rabbitmq:
        condition: service_started
      test-azure-storage-emulator:
        condition: service_started
    configs:
      - source: ConsumerApiOverrideConfig
        target: app/appsettings.override.json
    healthcheck:
      test: [ "CMD", "wget", "http://localhost/health", "-O", "/dev/null" ]
      interval: 5s
      timeout: 2s
      retries: 40

  test-admin-ui:
    container_name: admin-ui
    hostname: admin-ui
    build:
      context: ..
      dockerfile: AdminUi/src/AdminUi/Dockerfile
    ports:
      - "5173:80"
    depends_on:
      test-postgresql-server:
        condition: service_started
      test-rabbitmq:
        condition: service_started
      test-consumer-api:
        condition: service_healthy
      test-seed-postgresql-2:
          condition: service_completed_successfully
    configs:
      - source: AdminUiOverrideConfig
        target: app/appsettings.override.json
    environment:
      - Modules__Devices__Infrastructure__SqlDatabase__Provider=Postgres
      - Modules__Devices__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=devices;Password=Passw0rd;Port=5432
      
      - Modules__Quotas__Infrastructure__SqlDatabase__Provider=Postgres
      - Modules__Quotas__Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=quotas;Password=Passw0rd;Port=5432
      
      - Infrastructure__SqlDatabase__Provider=Postgres
      - Infrastructure__SqlDatabase__ConnectionString=Server=postgresql;Database=enmeshed;User Id=adminUi;Password=Passw0rd;Port=5432
      
      - Infrastructure__EventBus__ConnectionInfo=rabbitmq

  ### infrastructure ###

  test-azure-storage-emulator:
    container_name: azure-storage-emulator
    hostname: azurite
    image: mcr.microsoft.com/azure-storage/azurite #replacement for Microsoft image, which only runs on windows; source: https://github.com/arafato/azurite
    command: azurite -d /data/debug.log -l /data --blobHost "0.0.0.0" --queueHost "0.0.0.0"
    ports:
      - "10000:10000"
    volumes:
      - azure-storage-emulator-volume:/data

  test-postgresql-server:
    container_name: bkb-postgres
    hostname: postgresql
    image: postgres
    environment:
      - POSTGRES_PASSWORD=Passw0rd
      - POSTGRES_DB=enmeshed
    volumes:
      - postgresql-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-rabbitmq:
    container_name: bkb-rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.7-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672" # mgmt plugin, "guest/guest"
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq # default data dir

  ### seeds ###

  test-seed-client:
    container_name: seed-client
    image: ghcr.io/nmshd/backbone-admin-cli:v2.0.0
    command: >
      ./backbone client create -p Postgres -c "Server=postgresql;Database=enmeshed;User Id=devices;Password=Passw0rd;Port=5432" --clientId test --clientSecret test
    depends_on:
      test-consumer-api:
        condition: service_healthy

  test-seed-postgresql:
    container_name: seed-postgres
    image: postgres
    environment:
      - PGPASSWORD=Passw0rd
    command: >
      psql -h postgresql -U postgres -d enmeshed -f seed.sql
    configs:
      - source: DockerEntrypointInitdb
        target: seed.sql
    depends_on:
      test-postgresql-server:
        condition: service_healthy

  test-seed-postgresql-2:
    container_name: seed-postgres-2
    image: postgres
    environment:
      - PGPASSWORD=Passw0rd
    configs:
      - source: DockerEntrypointInitdb
        target: seed.sql
    command: >
      psql -h postgresql -U postgres enmeshed -f seed.sql
    depends_on:
      test-consumer-api:
        condition: service_healthy

configs:
  AdminUiOverrideConfig:
    file: ../AdminUi/src/AdminUi/appsettings.override.json
  ConsumerApiOverrideConfig:
    file: ../ConsumerApi/appsettings.override.json
  DockerEntrypointInitdb:
    file: ../setup-db/setup-postgres.sql

networks:
  default:
    name: backbone

volumes:
  rabbitmq-volume:
  postgresql-volume:
  azure-storage-emulator-volume:
  elastic_data:
