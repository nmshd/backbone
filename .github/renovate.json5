{
    $schema: "https://docs.renovatebot.com/renovate-schema.json",
    extends: ["config:recommended", "docker:pinDigests"],
    labels: ["dependencies"],
    schedule: ["after 10pm every weekday", "before 5am every weekday", "every weekend"],
    ignorePaths: ["**/node_modules/**", "**/bower_components/**", "**/vendor/**", "**/examples/**"], // we have to set this, in order to override the default that comes from `config:recommended`, which ignores any packages in directories like "tests"
    rangeStrategy: "pin",
    packageRules: [
        {
            // dart seems to have problems when pinning to a specific version, so we use the "auto" strategy for dart packages
            matchDatasources: ["dart"],
            rangeStrategy: "auto"
        },

        {
            // do not upgrade the dart sdk as it will not be compatible with the version that flutter ships
            matchDatasources: ["dart-version"],
            enabled: false
        },

        {
            // we don't want to update ArchUnitNET currently, because there is a bug in the latest version (see https://github.com/TNG/ArchUnitNET/issues/320)
            matchDatasources: ["nuget"],
            packageNames: ["TngTech.ArchUnitNET.xUnit", "FluentAssertions", "FluentAssertions.Json"],
            enabled: false
        },

        {
            // we don't want to update eslint currently, because there is a breaking change in its config
            matchDatasources: ["npm"],
            packageNames: ["eslint"],
            enabled: false
        },

        {
            // the docker images in this list are created and used by our pipelines and can therefore not to be updated by renovate
            matchDatasources: ["docker"],
            packageNames: [
                "ghcr.io/nmshd/backbone-consumer-api",
                "ghcr.io/nmshd/backbone-admin-ui",
                "ghcr.io/nmshd/backbone-event-handler",
                "ghcr.io/nmshd/backbone-sse-server",
                "ghcr.io/nmshd/backbone-database-migrator",
                "ghcr.io/nmshd/backbone-admin-cli"
            ],
            enabled: false
        },
        {
            // the dart packages in this list are fetched directly from git and therefore don't have a version
            matchDatasources: ["dart"],
            packageNames: ["window_size", "enmeshed_ui_kit"],
            enabled: false
        },

        {
            // these packages are from our Admin UI monorepo and can therefore not be updated by renovate
            matchDatasources: ["dart"],
            packageNames: ["admin_api_sdk", "admin_api_types"],
            enabled: false
        },

        {
            // all patch versions of all packages should be part of a single group; we don't even want a PR for this group (hence the automergeType "branch")
            groupName: "patch-all",
            matchUpdateTypes: ["patch", "digest"],
            automerge: true,
            automergeType: "branch"
        },

        // ############# Minor updates (one group per datasource) #############
        {
            groupName: "minor-updates-nuget",
            matchDatasources: ["nuget"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-npm",
            matchDatasources: ["npm"],
            matchUpdateTypes: ["minor"],
            automerge: true,
            automergeType: "branch"
        },
        {
            groupName: "minor-updates-dart",
            matchDatasources: ["dart"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-docker",
            matchDatasources: ["docker"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-github-tags-and-runners",
            matchDatasources: ["github-tags", "github-runners"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-helm",
            matchDatasources: ["helm"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-kubernetes-api",
            matchDatasources: ["kubernetes-api"],
            matchUpdateTypes: ["minor"]
        },
        {
            groupName: "minor-updates-terraform-and-provider",
            matchDatasources: ["terraform-module", "terraform-provider"],
            matchUpdateTypes: ["minor"]
        }
    ]
}
