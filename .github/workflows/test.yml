name: Test

on:
  push:
    branches-ignore:
      - "main"
    tags-ignore:
      - "*"

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   name: Run Tests
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: "7.0.x"
  #     - name: Run tests
  #       run: ./.ci/test.ts
  # build-capi-container-image:
  #   name: Build Consumer API Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/capi/buildContainerImage.ts
  #       env:
  #         TAG: test
  # build-acli-container-image:
  #   name: Build Admin CLI Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/acli/buildContainerImage.ts
  #       env:
  #         TAG: test
  # build-fsc-container-image:
  #   name: Build Files Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Files
  # build-msc-container-image:
  #   name: Build Messages Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Messages
  # build-rtsc-container-image:
  #   name: Build Relationship Templates Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Relationships
  #         PROJECT_SUFFIX: RelationshipTemplate
  # build-rcsc-container-image:
  #   name: Build Relationship Changes Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Relationships
  #         PROJECT_SUFFIX: RelationshipChange
  # build-ssc-container-image:
  #   name: Build Synchronization Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Synchronization
  # build-tsc-container-image:
  #   name: Build Tokens Sanity Check Container Image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install script dependencies
  #       run: npm install --prefix ./.ci
  #     - name: Build image
  #       run: ./.ci/sc/buildContainerImage.ts
  #       env:
  #         TAG: test
  #         MODULE: Tokens
  cns-transport-test:
    name: Run CNS-Transport Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: backbone  
      - uses: actions/checkout@v3
        with:
          repository: nmshd/cns-transport
          path: cns-transport
      - run: mkdir shared
      - run: cp ./backbone/setup-sqlserver.sql shared/setup-sqlserver.sql
      # - uses: isbang/compose-action@v1.4.1
      #   with:
      #     compose-file: './backbone/docker-compose/docker-compose.test.yml'
      - run: docker compose -f ./backbone/docker-compose/docker-compose.test.yml build
      - run: docker compose -f ./backbone/docker-compose/docker-compose.test.yml up
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Transport Tests
        working-directory: ./cns-transport
        env:
          NMSHD_TEST_BASEURL: http://localhost:5000
          NMSHD_TEST_CLIENTID: test
          NMSHD_TEST_CLIENTSECRET: test
        run: npm install && npm run test:local:node:lokijs