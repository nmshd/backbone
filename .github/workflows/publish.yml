name: Publish Helm Chart

on:
  push:
    tags: "*"

jobs:
  publish-admin-cli:
    name: Publish Admin CLI Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install script dependencies
        run: npm install --prefix ./.ci
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from git tag
        id: extract-version-from-git-tag
        run: echo "VERSION=$(./.ci/extractVersionFromGitTag.js)" >> $GITHUB_OUTPUT
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Log in to Docker Hub for accessing the cloud builder
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CLOUD_BUILDER_USERNAME }}
          password: ${{ secrets.CLOUD_BUILDER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "jssoft/js-soft"
      - name: Build and Push Container Image
        run: ./.ci/acli/buildContainerImage.js
        env:
          TAG: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
          PUSH: 1

  publish-admin-ui:
    name: Publish Admin UI Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install script dependencies
        run: npm install --prefix ./.ci
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from git tag
        id: extract-version-from-git-tag
        run: echo "VERSION=$(./.ci/extractVersionFromGitTag.js)" >> $GITHUB_OUTPUT
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Log in to Docker Hub for accessing the cloud builder
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CLOUD_BUILDER_USERNAME }}
          password: ${{ secrets.CLOUD_BUILDER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "jssoft/js-soft"
      - name: Build and Push Container Image
        run: ./.ci/aui/buildContainerImage.js
        env:
          TAG: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
          PUSH: 1

  publish-consumer-api:
    name: Publish Consumer API Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install script dependencies
        run: npm install --prefix ./.ci
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from git tag
        id: extract-version-from-git-tag
        run: echo "VERSION=$(./.ci/extractVersionFromGitTag.js)" >> $GITHUB_OUTPUT
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Log in to Docker Hub for accessing the cloud builder
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CLOUD_BUILDER_USERNAME }}
          password: ${{ secrets.CLOUD_BUILDER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "jssoft/js-soft"
      - name: Build and Push Container Image
        run: ./.ci/capi/buildContainerImage.js
        env:
          TAG: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
          PUSH: 1

  publish-event-handler:
    name: Publish Event Handler Service Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install script dependencies
        run: npm install --prefix ./.ci
      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from git tag
        id: extract-version-from-git-tag
        run: echo "VERSION=$(./.ci/extractVersionFromGitTag.js)" >> $GITHUB_OUTPUT
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Log in to Docker Hub for accessing the cloud builder
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CLOUD_BUILDER_USERNAME }}
          password: ${{ secrets.CLOUD_BUILDER_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "jssoft/js-soft"
      - name: Build and Push Container Image
        run: ./.ci/eh/buildContainerImage.js
        env:
          TAG: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
          PUSH: 1

  publish-helm-chart:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - publish-admin-cli
      - publish-admin-ui
      - publish-consumer-api
      - publish-event-handler
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install script dependencies
        run: npm install --prefix ./.ci
      - run: echo "$PASSWORD" | helm registry login -u $USER --password-stdin https://ghcr.io
        env:
          USER: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from git tag
        id: extract-version-from-git-tag
        run: echo "VERSION=$(./.ci/extractVersionFromGitTag.js)" >> $GITHUB_OUTPUT
        env:
          GIT_TAG: ${{ github.ref_name }}
      - name: Build Helm Chart
        run: ./.ci/helm/buildChart.js
        env:
          VERSION: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
      - name: Push Helm Chart
        run: ./.ci/helm/pushChart.js
        env:
          VERSION: ${{ steps.extract-version-from-git-tag.outputs.VERSION }}
