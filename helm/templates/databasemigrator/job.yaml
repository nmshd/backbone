apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.databasemigrator.name }}
  labels:
    {{- include "global.labels" . | nindent 4 }}
    app: {{ .Values.databasemigrator.name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      {{- with .Values.databasemigrator.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Values.databasemigrator.name }}
    spec:
      {{- with .Values.global.serviceAccount.name}}
      serviceAccountName: {{ . }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.databasemigrator.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.databasemigrator.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: settings-override
          configMap:
            name: configuration-for-databasemigrator
      containers:
        - name: {{ .Values.databasemigrator.name }}
          {{- with .Values.databasemigrator.securityContext }}
          securityContext:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          resources:
            {{- toYaml .Values.databasemigrator.resources | nindent 12 }}
          image: "{{ .Values.databasemigrator.image.repository }}:{{- default .Chart.AppVersion .Values.databasemigrator.image.tagOverride }}"
          imagePullPolicy: {{ .Values.databasemigrator.image.pullPolicy }}
          volumeMounts:
            - name: settings-override
              mountPath: /app/appsettings.override.json
              subPath: appsettings.override.json
              readOnly: true
          env:
            {{- $arg0 := default (list) (.Values.global.env) }}
            {{- $arg1 := default (list) (.Values.databasemigrator.env) }}
            {{- $globalEnvMap := include "listToMap" $arg0 | fromYaml }}
            {{- $resourceEnvMap := include "listToMap" $arg1 | fromYaml }}
            {{- $mergedEnvMap := merge $resourceEnvMap $globalEnvMap }}
            {{- range $item := $mergedEnvMap }}
            - name: {{ $item.name }}
            {{- if $item.value }}
              value: {{ $item.value }}
              {{- else if $item.valueFrom }}
              valueFrom:
                secretKeyRef:
                  name: {{ $item.valueFrom.secretKeyRef.name }}
                  key: {{ $item.valueFrom.secretKeyRef.key }}
            {{- end }}
            {{- end }}
      {{- with .Values.databasemigrator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.databasemigrator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.databasemigrator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
