consumerapi:
  nameOverride: ""
  replicas: 1

  image:
    repository: "ghcr.io/nmshd/backbone-consumer-api"
    tagOverride: ""
    pullPolicy: "IfNotPresent"
    imagePullSecrets: []

  # resources - the resources for the Consumer API container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources:
    requests:
      cpu: "200m"
      memory: "128Mi"
    limits:
      cpu: "400m"
      memory: "1Gi"

  # securityContext - securityContext for the Consumer API container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext: {}

  # podSecurityContext - securityContext for the pods deployed by the Deployment (see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}

  podAnnotations: {}

  # env - environment variables for the Consumer API container (see https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
  env: []

  service:
    type: "ClusterIP"
    port: 80
    loadBalancer:
      # ip - the static ip address the LoadBalancer should use
      ip: ""
      # resourceGroup - the Azure resource group the LoadBalancer should be created in
      azureResourceGroup: ""

  # httpRoute - the configuration of the HttpRoute for the Consumer API
  httpRoute:
    # enabled - whether to enable the HttpRoute for the Consumer API
    enabled: false
    # parentRefName - the name of the gateway this Route wants to be attached to
    parentRefName: ""
    # parentRefNamespace - # the namespace of the gateway this Route wants to be attached to
    parentRefNamespace: ""
    hostnames: []

  ingress:
    # enabled - whether to enable the Ingress for the Consumer API
    enabled: false
    host: ""
    # certName - the name of the certificate to use for SSL/TLS
    certName: ""

  # the nodeSelector for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
  nodeSelector: {}

  # the tolerations for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
  tolerations: []

  # the affinity for the pods deployed by the Deployment (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity)
  affinity: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ""

  # backendConfig - only applicable if .Values.global.provider is set to "GoogleCloud"; see https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#direct_health for a description of `HttpRoute`s`
  backendConfig:
    healthCheck:
      # checkIntervalSec - time from the start of one prober's check to the start of its next check
      checkIntervalSec: 15
      # timeoutSec - the amount of time that Google Cloud waits for a response to a probe
      timeoutSec: 15
      # healthyThreshold - the number of consecutive successful checks required to mark a backend as healthy
      healthyThreshold: 1
      # unhealthyThreshold - the number of consecutive failed checks required to mark a backend as unhealthy
      unhealthyThreshold: 2

adminui:
  service:
    type: "ClusterIP"
    port: 80

  nameOverride: ""
  replicas: 1

  image:
    repository: "ghcr.io/nmshd/backbone-admin-ui"
    tagOverride: ""
    pullPolicy: "IfNotPresent"
    imagePullSecrets: []

  # resources - the resources for the Admin UI container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "100m"
      memory: "128Mi"

  # securityContext - securityContext for the Consumer API container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext: {}

  # podSecurityContext - securityContext for the pods deployed by the Deployment (see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}

  podAnnotations: {}

  # env - environment variables for the Admin UI container (see https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
  env:
    - name: Database__ConnectionString
      valueFrom:
        secretKeyRef:
          name: "devices-sql-connectionstring"
          key: VALUE

  # the nodeSelector for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
  nodeSelector: {}

  # the tolerations for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
  tolerations: []

  # the affinity for the pods deployed by the Deployment (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity)
  affinity: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ""

  # httpRoute - the configuration of the HttpRoute for the Consumer API
  httpRoute:
    # enabled - whether to enable the HttpRoute for the Consumer API
    enabled: false
    # parentRefName - the name of the gateway this Route wants to be attached to
    parentRefName: ""
    # parentRefNamespace - # the namespace of the gateway this Route wants to be attached to
    parentRefNamespace: ""
    hostnames: []

  # backendConfig - only applicable if .Values.global.provider is set to "GoogleCloud"; see https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#direct_health for a description of `HttpRoute`s`
  backendConfig:
    healthCheck:
      # checkIntervalSec - time from the start of one prober's check to the start of its next check
      checkIntervalSec: 15
      # timeoutSec - the amount of time that Google Cloud waits for a response to a probe
      timeoutSec: 15
      # healthyThreshold - the number of consecutive successful checks required to mark a backend as healthy
      healthyThreshold: 1
      # unhealthyThreshold - the number of consecutive failed checks required to mark a backend as unhealthy
      unhealthyThreshold: 2

admincli:
  nameOverride: ""

  configuration:
    Database:
      # Provider - possible values: "Postgres"/"SqlServer"
      Provider: "Postgres"

  image:
    repository: "ghcr.io/nmshd/backbone-admin-cli"
    tagOverride: ""
    pullPolicy: "IfNotPresent"
    imagePullSecrets: []

  # resources - the resources for the Admin CLI container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#resources)
  resources:
    requests:
      cpu: "200m"
      memory: "128Mi"
    limits:
      cpu: "400m"
      memory: "1Gi"

  # securityContext - securityContext for the Consumer API container (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
  securityContext: {}

  # podSecurityContext - securityContext for the pods deployed by the Deployment (see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
  podSecurityContext: {}

  podAnnotations: {}

  # env - environment variables for the Admin CLI container (see https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/)
  env: []

  # the nodeSelector for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
  nodeSelector: {}

  # the tolerations for the pods deployed by the Deployment (see https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
  tolerations: []

  # the affinity for the pods deployed by the Deployment (see https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#NodeAffinity)
  affinity: {}

global:
  # useBuiltInEventbus - if a development event bus should be created, set this to true; if you want to use an existing one, set it to false
  useBuiltInEventbus: false

  # environment - possible values: "Development"/"Production"
  environment: ""

  # provider - possible values: "Azure"/"GoogleCloud"
  provider: ""

  serviceAccount:
    create: false
    # name - defaults to the name of the chart
    name: ""
    annotations: {}

  configuration:
    authentication:
      jwtLifetimeInSeconds: 300
      # jwtSigningCertificateSource - possible values: "config"/"file"
      jwtSigningCertificateSource: "config"
      # jwtSigningCertificateFile - only applicable if JwtSigningCertificateSource is "config"; should be set via environment variable
      jwtSigningCertificate: ""
    cors:
      # allowedOrigins - a semicolon-separated list of origins that are allowed to access the API; if empty, no origin is allowed
      allowedOrigins: ""
      # allowedMethods - a semicolon-separated list of headers that are exposed to the client; the specified headers are recommended, because they are used by the official Enmeshed app
      exposedHeaders: "X-Request-Time;X-Response-Time;X-Response-Duration-ms;X-Trace-Id"
    swaggerUi:
      # enabled - whether the Swagger UI should be enabled
      enabled: false
      # tokenUrl - the URL from which the Swagger UI can obtain a JWT; it usually follows the pattern "<backbone-base-url>/connect/token"
      tokenUrl: ""
    infrastructure:
      eventBus:
        # vendor - possible values: "RabbitMQ"/"Azure"/"GoogleCloud"
        vendor: ""
        # connectionInfo - only applicable if Vendor is "RabbitMQ"; the host name of the RabbitMQ service; the connection string of the Azure Service Bus if Vendor is "Azure"; if Vendor is "GoogleCloud" this is not used
        connectionInfo: ""
        # subscriptionClientName - the name of the subscription that should be used to receive events
        subscriptionClientName: ""
        # rabbitMQUsername - only applicable if Vendor is "RabbitMQ"; should be set via environment variable
        rabbitMQUsername: ""
        # rabbitMQPassword - only applicable if Vendor is "RabbitMQ"; should be set via environment variable
        rabbitMQPassword: ""
        # connectionRetryCount - only applicable if Vendor is "RabbitMQ"; specifies how often the Consumer API should retry to connect to the RabbitMQ service
        connectionRetryCount: 5
        # gcpPubSubProjectId - only applicable if Vendor is "GoogleCloud"; the ID of the Google Cloud project the Pub/Sub service is running in
        gcpPubSubProjectId: ""
        # gcpPubSubTopicName - only applicable if Vendor is "GoogleCloud"; the name of the Pub/Sub topic the Consumer API should publish events to
        gcpPubSubTopicName: ""
    modules:
      challenges:
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
      devices:
        application:
          # addressPrefix - the prefix that should be used when generating Identity Addresses; the official Enmeshed App currently only supports "id1"
          addressPrefix: id1
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          pushNotifications:
            # provider - possible values: "AzureNotificationHub"/"Dummy"/"Direct"
            provider: ""
            # azureNotificationHub:
            #   hubName: ""
            #   connectionString: ""
            # directPnsCommunication:
            #   fcm:
            #     # serviceAccounts - the service accounts that should be used to communicate with the FCM service
            #     serviceAccounts:
            #       # the name of the service account (can be chosen freely)
            #       serviceAccount1:
            #         # the content of the service account json file
            #         serviceAccountJson: ''
            #     apps:
            #       # the app id (has to match the app id specified for the app that should receive the push notifications)
            #       appId1:
            #         # the name of the service account that should be used to communicate with the FCM service (has to match the name of one of the service accounts specified above)
            #         serviceAccountName: ''
            #   apns:
            #     # keys - the keys that should be used to communicate with APNs
            #     keys:
            #       # the name of the key (can be chosen freely)
            #       key1:
            #         # teamId - the team id
            #         teamId: ''
            #         # keyId - the team id
            #         keyId: ''
            #         # privateKey - the content of the p8 file between '-----BEGIN PRIVATE KEY-----' and '-----END PRIVATE KEY-----'
            #         privateKey: ''
            #     bundles:
            #       # the bundle id (has to match the bundle id specified for the app that should receive the push notifications)
            #      bundleId1:
            #         # the name of the key that should be used to communicate with APNs (has to match the name of one of the keys specified above)
            #         keyName: ''
            #         serverType: ''
      files:
        application:
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          blobStorage:
            # cloudProvider - possible values: "GoogleCloud"/"Azure"
            cloudProvider: ""
            # connectionInfo - should be set via environment variable
            connectionInfo: ""
            # containerName - the name of the Bucket if CloudProvider=GoogleCloud; the name of the Container if CloudProvider=Azure
            containerName: ""
      messages:
        application:
          # maxNumberOfUnreceivedMessagesFromOneSender - if this number is exceeded, the Consumer API will not accept any more messages from the sender to the recipient in order to prevent spam
          maxNumberOfUnreceivedMessagesFromOneSender: 20
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          blobStorage:
            # cloudProvider - possible values: "GoogleCloud"/"Azure"
            cloudProvider: ""
            # connectionInfo - should be set via environment variable
            connectionInfo: ""
            # containerName - the name of the Bucket if CloudProvider=GoogleCloud; the name of the Container if CloudProvider=Azure
            containerName: ""
      quotas:
        application:
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
      relationships:
        application:
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          blobStorage:
            # cloudProvider - possible values: "GoogleCloud"/"Azure"
            cloudProvider: ""
            # connectionInfo - should be set via environment variable
            connectionInfo: ""
            # containerName - the name of the Bucket if CloudProvider=GoogleCloud; the name of the Container if CloudProvider=Azure
            containerName: ""
      synchronization:
        application:
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          blobStorage:
            # cloudProvider - possible values: "GoogleCloud"/"Azure"
            cloudProvider: ""
            # connectionInfo - should be set via environment variable
            connectionInfo: ""
            # containerName - the name of the Bucket if CloudProvider=GoogleCloud; the name of the Container if CloudProvider=Azure
            containerName: ""
      tokens:
        application:
          # pagination - the following options describe the default and maximum page size for the different endpoints
          pagination:
            defaultPageSize: 50
            maxPageSize: 200
        infrastructure:
          sqlDatabase:
            # provider - possible values: "Postgres"/"SqlServer"
            provider: ""
            # connectionString - should be set via environment variable
            connectionString: ""
          blobStorage:
            # cloudProvider - possible values: "GoogleCloud"/"Azure"
            cloudProvider: ""
            # connectionInfo - should be set via environment variable
            connectionInfo: ""
            # containerName - the name of the Bucket if CloudProvider=GoogleCloud; the name of the Container if CloudProvider=Azure
            containerName: ""
    serilog:
      using:
        - Serilog.Sinks.ApplicationInsights
      minimumLevel:
        default: Information
      enrich:
        - FromLogContext
        - WithMachineName
        - WithProcessId
        - WithThreadId
        - WithEnvironmentName
      writeTo:
        - name: Console
          args:
            outputTemplate: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff}|{Level} - CorrelationId:{CorrelationId} - RequestId:{RequestId} - RequestPath:{RequestPath} - Address:{identityAddress} - DeviceId:{deviceId} {NewLine}    {SourceContext}{NewLine}    {Message}{NewLine}{Exception}"
