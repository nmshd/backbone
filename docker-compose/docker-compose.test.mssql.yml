version: "3.3"
services:
  test-consumer-api:
    extends: 
      file: docker-compose.test.yml
      service: test-consumer-api
    depends_on:
      test-ms-sql-server:
        condition: service_started
      test-rabbitmq:
        condition: service_started
      test-seed-mssql:
        condition: service_completed_successfully
      test-azure-storage-emulator:
        condition: service_started

  test-admin-ui:
    extends: 
      file: docker-compose.test.yml
      service: test-admin-ui
    depends_on:
      test-ms-sql-server:
        condition: service_started
      test-rabbitmq:
        condition: service_started
      test-consumer-api:
        condition: service_healthy
    environment:
      - Modules__Devices__Infrastructure__SqlDatabase__ConnectionString=Server=ms-sql-server;Database=enmeshed;User Id=devices;Password=Passw0rd;TrustServerCertificate=True
      - Modules__Quotas__Infrastructure__SqlDatabase__ConnectionString=Server=ms-sql-server;Database=enmeshed;User Id=quotas;Password=Passw0rd;TrustServerCertificate=True
      - Infrastructure__SqlDatabase__ConnectionString=Server=ms-sql-server;Database=enmeshed;User Id=adminUi;Password=Passw0rd;TrustServerCertificate=True

  ### infrastructure ###

  test-azure-storage-emulator:
    extends: 
      file: docker-compose.test.yml
      service: test-azure-storage-emulator

  test-ms-sql-server:
    container_name: bkb-mssql_server
    hostname: ms-sql-server
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - MSSQL_SA_PASSWORD=Passw0rd
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
    volumes:
      - mssql-server-volume:/var/opt/mssql
    ports:
      - 1433:1433

  test-rabbitmq:
    extends: 
      file: docker-compose.test.yml
      service: test-rabbitmq

  ### seeds ###

  test-seed-mssql:
    image: mcr.microsoft.com/mssql-tools
    volumes:
      - ../setup-db:/app/setup-db
    command: >
      bash -c " sleep 20 && /opt/mssql-tools/bin/sqlcmd -S ms-sql-server -U SA -P Passw0rd -q \"DROP DATABASE IF EXISTS enmeshed\" && /opt/mssql-tools/bin/sqlcmd -S ms-sql-server -U SA -P Passw0rd -q \"CREATE DATABASE enmeshed\" && sleep 1 && /opt/mssql-tools/bin/sqlcmd -S ms-sql-server -U SA -P Passw0rd -d enmeshed -i app/setup-db/setup-sqlserver.sql "
    depends_on:
      - test-ms-sql-server

  test-seed-client:
    extends: 
      file: docker-compose.test.yml
      service: test-seed-client
    command: >
      ./backbone client create -p SqlServer -c "Server=ms-sql-server;Database=enmeshed;User Id=devices;Password=Passw0rd;TrustServerCertificate=True" --clientId test --clientSecret test
    depends_on:
      test-consumer-api:
        condition: service_healthy

configs:
  AdminUiOverrideConfig:
    file: ../AdminUi/src/AdminUi/appsettings.override.json
  ConsumerApiOverrideConfig:
    file: ../ConsumerApi/appsettings.override.json

networks:
  default:
    name: backbone

volumes:
  rabbitmq-volume:
  mssql-server-volume:
  azure-storage-emulator-volume:
  elastic_data:
