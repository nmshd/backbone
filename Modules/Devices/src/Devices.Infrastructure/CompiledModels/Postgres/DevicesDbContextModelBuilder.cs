// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#pragma warning disable 219, 612, 618
#nullable enable

namespace Backbone.Modules.Devices.Infrastructure.CompiledModels.Postgres
{
    public partial class DevicesDbContextModel
    {
        partial void Initialize()
        {
            var pnsRegistration = PnsRegistrationEntityType.Create(this);
            var tier = TierEntityType.Create(this);
            var applicationUser = ApplicationUserEntityType.Create(this);
            var challenge = ChallengeEntityType.Create(this);
            var device = DeviceEntityType.Create(this);
            var identity = IdentityEntityType.Create(this);
            var identityRole = IdentityRoleEntityType.Create(this);
            var identityRoleClaim = IdentityRoleClaimEntityType.Create(this);
            var identityUserClaim = IdentityUserClaimEntityType.Create(this);
            var identityUserLogin = IdentityUserLoginEntityType.Create(this);
            var identityUserRole = IdentityUserRoleEntityType.Create(this);
            var identityUserToken = IdentityUserTokenEntityType.Create(this);
            var openIddictEntityFrameworkCoreApplication = OpenIddictEntityFrameworkCoreApplicationEntityType.Create(this);
            var openIddictEntityFrameworkCoreAuthorization = OpenIddictEntityFrameworkCoreAuthorizationEntityType.Create(this);
            var openIddictEntityFrameworkCoreScope = OpenIddictEntityFrameworkCoreScopeEntityType.Create(this);
            var openIddictEntityFrameworkCoreToken = OpenIddictEntityFrameworkCoreTokenEntityType.Create(this);

            ApplicationUserEntityType.CreateForeignKey1(applicationUser, device);
            DeviceEntityType.CreateForeignKey1(device, identity);
            IdentityRoleClaimEntityType.CreateForeignKey1(identityRoleClaim, identityRole);
            IdentityUserClaimEntityType.CreateForeignKey1(identityUserClaim, applicationUser);
            IdentityUserLoginEntityType.CreateForeignKey1(identityUserLogin, applicationUser);
            IdentityUserRoleEntityType.CreateForeignKey1(identityUserRole, identityRole);
            IdentityUserRoleEntityType.CreateForeignKey2(identityUserRole, applicationUser);
            IdentityUserTokenEntityType.CreateForeignKey1(identityUserToken, applicationUser);
            OpenIddictEntityFrameworkCoreAuthorizationEntityType.CreateForeignKey1(openIddictEntityFrameworkCoreAuthorization, openIddictEntityFrameworkCoreApplication);
            OpenIddictEntityFrameworkCoreTokenEntityType.CreateForeignKey1(openIddictEntityFrameworkCoreToken, openIddictEntityFrameworkCoreApplication);
            OpenIddictEntityFrameworkCoreTokenEntityType.CreateForeignKey2(openIddictEntityFrameworkCoreToken, openIddictEntityFrameworkCoreAuthorization);

            PnsRegistrationEntityType.CreateAnnotations(pnsRegistration);
            TierEntityType.CreateAnnotations(tier);
            ApplicationUserEntityType.CreateAnnotations(applicationUser);
            ChallengeEntityType.CreateAnnotations(challenge);
            DeviceEntityType.CreateAnnotations(device);
            IdentityEntityType.CreateAnnotations(identity);
            IdentityRoleEntityType.CreateAnnotations(identityRole);
            IdentityRoleClaimEntityType.CreateAnnotations(identityRoleClaim);
            IdentityUserClaimEntityType.CreateAnnotations(identityUserClaim);
            IdentityUserLoginEntityType.CreateAnnotations(identityUserLogin);
            IdentityUserRoleEntityType.CreateAnnotations(identityUserRole);
            IdentityUserTokenEntityType.CreateAnnotations(identityUserToken);
            OpenIddictEntityFrameworkCoreApplicationEntityType.CreateAnnotations(openIddictEntityFrameworkCoreApplication);
            OpenIddictEntityFrameworkCoreAuthorizationEntityType.CreateAnnotations(openIddictEntityFrameworkCoreAuthorization);
            OpenIddictEntityFrameworkCoreScopeEntityType.CreateAnnotations(openIddictEntityFrameworkCoreScope);
            OpenIddictEntityFrameworkCoreTokenEntityType.CreateAnnotations(openIddictEntityFrameworkCoreToken);

            AddAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
            AddAnnotation("ProductVersion", "7.0.10");
            AddAnnotation("Relational:MaxIdentifierLength", 63);
        }
    }
}
