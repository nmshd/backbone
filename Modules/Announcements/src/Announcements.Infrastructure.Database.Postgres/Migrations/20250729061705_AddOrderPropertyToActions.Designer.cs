// <auto-generated />
using System;
using Backbone.Modules.Announcements.Infrastructure.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backbone.Modules.Announcements.Infrastructure.Database.Postgres.Migrations
{
    [DbContext(typeof(AnnouncementsDbContext))]
    [Migration("20250729061705_AddOrderPropertyToActions")]
    partial class AddOrderPropertyToActions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Announcements")
                .HasAnnotation("DbProvider", "Npgsql")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.Announcement", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character(20)")
                        .IsFixedLength();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IqlQuery")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("character varying(1000)")
                        .IsFixedLength(false);

                    b.Property<bool>("IsSilent")
                        .HasColumnType("boolean");

                    b.Property<int>("Severity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Announcements", "Announcements");
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementAction", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character(20)")
                        .IsFixedLength();

                    b.Property<string>("AnnouncementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character(20)")
                        .IsFixedLength();

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<byte>("Order")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("AnnouncementActions", "Announcements");
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementRecipient", b =>
                {
                    b.Property<string>("AnnouncementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character(20)")
                        .IsFixedLength();

                    b.Property<string>("Address")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)")
                        .IsFixedLength(false);

                    b.HasKey("AnnouncementId", "Address");

                    b.HasIndex("AnnouncementId", "Address")
                        .IsUnique();

                    b.ToTable("AnnouncementRecipients", "Announcements");
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementText", b =>
                {
                    b.Property<string>("AnnouncementId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character(20)")
                        .IsFixedLength();

                    b.Property<string>("Language")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AnnouncementId", "Language");

                    b.ToTable("AnnouncementText", "Announcements");
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementAction", b =>
                {
                    b.HasOne("Backbone.Modules.Announcements.Domain.Entities.Announcement", null)
                        .WithMany("Actions")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementRecipient", b =>
                {
                    b.HasOne("Backbone.Modules.Announcements.Domain.Entities.Announcement", null)
                        .WithMany("Recipients")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.AnnouncementText", b =>
                {
                    b.HasOne("Backbone.Modules.Announcements.Domain.Entities.Announcement", null)
                        .WithMany("Texts")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Backbone.Modules.Announcements.Domain.Entities.Announcement", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Recipients");

                    b.Navigation("Texts");
                });
#pragma warning restore 612, 618
        }
    }
}
